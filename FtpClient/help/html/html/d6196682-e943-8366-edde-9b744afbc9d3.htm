<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>IFtpClient Members</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IFtpClient interface" /><meta name="System.Keywords" content="IFtpClient interface, all members" /><meta name="System.Keywords" content="System.Net.FtpClient.IFtpClient interface" /><meta name="Microsoft.Help.Id" content="AllMembers.T:System.Net.FtpClient.IFtpClient" /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="System.Net.FtpClient" /><meta name="file" content="d6196682-e943-8366-edde-9b744afbc9d3" /><meta name="guid" content="d6196682-e943-8366-edde-9b744afbc9d3" /></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label><label id="devlangsMenuFSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: F# </nobr></label></span><span>    </span><span id="memberOptionsDropdown" class="filter" tabindex="0"><img id="memberOptionsDropdownImage" src="../icons/dropdown.gif" /> <label id="memberOptionsMenuAllLabel" for="memberOptionsDropdownImage" style="display: none;"><nobr>Members: Show All </nobr></label><label id="memberOptionsMenuMultipleLabel" for="memberOptionsDropdownImage" style="display: none;"><nobr>Members: Filtered </nobr></label><label id="memberOptionsMenuProtectedLabel" for="memberOptionsDropdownImage" style="display: none;"><nobr>Members: Filtered </nobr></label><label id="memberOptionsMenuInheritedLabel" for="memberOptionsDropdownImage" style="display: none;"><nobr>Members: Filtered </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /><input id="FSharpCheckbox" type="checkbox" data="FSharp,fs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="FSharpCheckbox">F#</label><br /></div><div id="memberOptionsMenu"><input id="ProtectedCheckbox" type="checkbox" data="Protected" value="on" onClick="SetMemberOptions(this, 'vis')" /><label class="checkboxLabel" for="ProtectedCheckbox">Include Protected Members</label><br /><input id="InheritedCheckbox" type="checkbox" data="Inherited" value="on" onClick="SetMemberOptions(this, 'decl')" /><label class="checkboxLabel" for="InheritedCheckbox">Include Inherited Members</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">System.Net.FtpClient</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">IFtpClient Members</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="e8f97041-926d-bea6-3d54-e53c327bdd06.htm">IFtpClient Interface</a> <a href="#methodTableToggle" onclick="OpenSection(methodTableToggle)">Methods</a> <a href="#propertyTableToggle" onclick="OpenSection(propertyTableToggle)">Properties</a> <a href="#eventTableToggle" onclick="OpenSection(eventTableToggle)">Events</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="#" onclick="javascript:SubmitFeedback('jptrosclair@gmail.com','System.Net.FtpClient','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback'); return false;">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" id="headerBottom"><img id="headerBottomImage" style="display: none;" src="../icons/gradient.gif" /></td></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><p /><p>The <a href="e8f97041-926d-bea6-3d54-e53c327bdd06.htm">IFtpClient</a> type exposes the following members.</p><h1 class="heading"><span onclick="ExpandCollapse(methodTableToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(methodTableToggle, event)" tabindex="0"><img id="methodTableToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Methods</span></h1><div id="methodTableSection" class="section" name="collapseableSection" style=""><table id="memberList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
							 
						</th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d9996387-e034-5d6c-06b0-47c0e982d6f9.htm">BeginConnect</a></td><td><div class="summary">
            Initiates a connection to the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3ec1ee4a-e0af-9b29-89d1-d87c4ad4626e.htm">BeginCreateDirectory(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Creates a directory asynchronously
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="04ba9758-fc6e-75d4-c623-e15f0ad7e8dd.htm">BeginCreateDirectory(String, Boolean, AsyncCallback, Object)</a></td><td><div class="summary">
            Creates a directory asynchronously
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7e0ed970-1707-c00d-ec59-860453aaf2f4.htm">BeginDeleteDirectory(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Asynchronously removes a directory from the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="edf4be4f-20a3-b427-aa0d-472f685807dc.htm">BeginDeleteDirectory(String, Boolean, AsyncCallback, Object)</a></td><td><div class="summary">
            Asynchronously removes a directory from the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8da69560-b684-9c91-a0a7-d6d80473f55e.htm">BeginDeleteDirectory(String, Boolean, FtpListOption, AsyncCallback, Object)</a></td><td><div class="summary">
            Asynchronously removes a directory from the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1bfe8712-e6e4-8e1f-3016-9678311daa8d.htm">BeginDeleteFile</a></td><td><div class="summary">
            Asynchronously deletes a file from the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d92aa350-c627-ff5c-a477-017a5ee91974.htm">BeginDereferenceLink(FtpListItem, AsyncCallback, Object)</a></td><td><div class="summary">
            Derefence a FtpListItem object asynchronously. See the
            MaximumDereferenceCount property for controlling
            how deep this method will recurse before giving up.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fbe7843e-7ece-908f-0a65-63a1d08f3403.htm">BeginDereferenceLink(FtpListItem, Int32, AsyncCallback, Object)</a></td><td><div class="summary">
            Derefence a FtpListItem object asynchronously
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f6171a82-c735-4eb1-0de8-eb7f1d540405.htm">BeginDirectoryExists</a></td><td><div class="summary">
            Checks if a directory exists on the server asynchronously.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ddf79d70-2a22-ae92-8fbf-deff16e909f2.htm">BeginDisconnect</a></td><td><div class="summary">
            Initiates a disconnection on the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e393dede-41b3-e2cc-df65-c2ad0468fcd7.htm">BeginExecute</a></td><td><div class="summary">
            Performs an asynchronouse execution of the specified command
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="764a2b3d-a168-c5e6-f716-0749ae1e3ab8.htm">BeginFileExists(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Checks if a file exsts on the server by taking a 
            file listing of the parent directory in the path
            and comparing the results the path supplied.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="73acab0d-1116-3596-6919-cc6160424f94.htm">BeginFileExists(String, FtpListOption, AsyncCallback, Object)</a></td><td><div class="summary">
            Checks if a file exsts on the server by taking a 
            file listing of the parent directory in the path
            and comparing the results the path supplied.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7cf34ae9-730a-5f0a-5650-54098352e138.htm">BeginGetFileSize</a></td><td><div class="summary">
            Asynchronously retrieve the size of the specified file
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="42c43a25-0d52-5a11-5d45-2630c6e43006.htm">BeginGetHash</a></td><td><div class="summary">
            Asynchronously retrieves the hash for the specified file
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6773c36c-b173-259c-58c5-11fe646598f3.htm">BeginGetHashAlgorithm</a></td><td><div class="summary">
            Asynchronously get the hash algorithm being used by the HASH command.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="87d7f42c-ec35-8d2c-92e6-b49c584591dd.htm">BeginGetListing(AsyncCallback, Object)</a></td><td><div class="summary">
            Gets a file listing from the server asynchronously
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="234c2bfa-2e91-2963-90f4-f8458090d264.htm">BeginGetListing(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Gets a file listing from the server asynchronously
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="33b8c627-5729-5545-0bdf-824aa69414cb.htm">BeginGetListing(String, FtpListOption, AsyncCallback, Object)</a></td><td><div class="summary">
            Gets a file listing from the server asynchronously
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="69863daf-1f42-8657-e4d8-de91e5b5c76b.htm">BeginGetModifiedTime</a></td><td><div class="summary">
            Gets the modified time of the file
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="74ed7474-28f2-d3b0-38b4-ce001f071598.htm">BeginGetNameListing(AsyncCallback, Object)</a></td><td><div class="summary">
            Asynchronously gets a list of file and directory names for the specified path.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="602b9b37-142c-64c0-c201-3dbd36a89e7d.htm">BeginGetNameListing(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Asynchronously gets a list of file and directory names for the specified path.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="671222c2-c4b3-d528-93f5-30660977df22.htm">BeginGetObjectInfo</a></td><td><div class="summary">
            Returns information about a file system object. You should check the Capabilities
            flags for the FtpCapability.MLSD flag before calling this method. Failing to do
            so will result in an InvalidOperationException being thrown when the server
            does not support machine listings. Returns null if the server response can't
            be parsed or the server returns a failure completion code. The error for a failure
            is logged with FtpTrace. No exception is thrown on error because that would negate
            the usefullness of this method for checking for the existence of an object.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="81ff4e87-ca31-1cf4-5783-b22bf8284116.htm">BeginGetWorkingDirectory</a></td><td><div class="summary">
            Asynchronously retrieves the working directory
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="245764d3-5d24-a16a-6430-cedaae7b747d.htm">BeginOpenAppend(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for writing
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="61815902-30f3-6a49-9baa-10a0dc0971f5.htm">BeginOpenAppend(String, FtpDataType, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for writing
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ce69c53e-7c4c-a35e-74b5-197d209571c1.htm">BeginOpenRead(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="36f9217a-c9c3-4caf-c455-d92d470da603.htm">BeginOpenRead(String, Int64, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="280e12d7-30aa-523f-7832-e4752ed5985b.htm">BeginOpenRead(String, FtpDataType, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="576906d8-de54-11ea-e6e2-bc1db5d9fe7c.htm">BeginOpenRead(String, FtpDataType, Int64, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b3cc8143-f4ab-cadf-4dc7-285bb46e5116.htm">BeginOpenWrite(String, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for writing
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e5acd908-e6c0-6d24-667c-eebecd277011.htm">BeginOpenWrite(String, FtpDataType, AsyncCallback, Object)</a></td><td><div class="summary">
            Opens the specified file for writing
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e8c24999-b619-f0a0-4070-54cbdcfd3083.htm">BeginRename</a></td><td><div class="summary">
            Asynchronously renames an object on the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fbad4be1-1812-4500-a8c9-198d20b2a96d.htm">BeginSetHashAlgorithm</a></td><td><div class="summary">
            Asynchronously sets the hash algorithm type to be used with the HASH command.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ae157435-78c0-9eda-2392-a8300f27cab9.htm">BeginSetWorkingDirectory</a></td><td><div class="summary">
            Asynchronously changes the working directory on the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="faab9f61-ba7e-33cc-51c6-97b3370ccc59.htm">Connect</a></td><td><div class="summary">
            Connect to the server. Throws ObjectDisposedException if this object has been disposed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="74a63730-7bd1-3600-5f02-eb55b455c176.htm">CreateDirectory(String)</a></td><td><div class="summary">
            Creates a directory on the server. If the preceding
            directories do not exist they are created.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="5e49d1d9-f926-f7a6-637b-608e585e838b.htm">CreateDirectory(String, Boolean)</a></td><td><div class="summary">
            Creates a directory on the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="60354cb8-b5c0-cf59-9e99-2ab5b7334037.htm">DeleteDirectory(String)</a></td><td><div class="summary">
            Deletes the specified directory on the server.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ff62c94f-ce4c-6aa4-bb2b-d40c68fc889a.htm">DeleteDirectory(String, Boolean)</a></td><td><div class="summary">
            Delets the specified directory on the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="279445da-913b-7d1b-e402-85fd84222093.htm">DeleteDirectory(String, Boolean, FtpListOption)</a></td><td><div class="summary">
            Deletes the specified directory on the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6e2821e8-d373-e2e7-ef1e-3db562416e57.htm">DeleteFile</a></td><td><div class="summary">
            Deletes a file on the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6f542fd1-708f-a0e4-135f-8dde9793dc72.htm">DereferenceLink(FtpListItem)</a></td><td><div class="summary">
            Recursively dereferences a symbolic link. See the
            MaximumDereferenceCount property for controlling
            how deep this method will recurse before giving up.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4603ff3d-556a-20cc-45fa-528f6513a073.htm">DereferenceLink(FtpListItem, Int32)</a></td><td><div class="summary">
            Recursively dereferences a symbolic link
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3414c411-fb6c-892c-bb12-da7ef3017ac8.htm">DirectoryExists</a></td><td><div class="summary">
            Tests if the specified directory exists on the server. This
            method works by trying to change the working directory to
            the path specified. If it succeeds, the directory is changed
            back to the old working directory and true is returned. False
            is returned otherwise and since the CWD failed it is assumed
            the working directory is still the same.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f349dbbe-9a18-42fc-9984-b16046cf8241.htm">DisableUTF8</a></td><td><div class="summary">
            Disables UTF8 support and changes the Encoding property
            back to ASCII. If the server returns an error when trying
            to turn UTF8 off a FtpCommandException will be thrown.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b39757f4-2d72-457e-3ef7-377fc72bcdd9.htm">Disconnect</a></td><td><div class="summary">
            Disconnect from the server
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/es4s3w1d" target="_blank">Dispose</a></td><td><div class="summary">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="30083c44-db6b-ff29-79c1-bd5552f8be56.htm">EndConnect</a></td><td><div class="summary">
            Ends an asynchronous connection attempt to the server
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="07f556df-d1f5-ee4e-d99c-9e3bc22df46b.htm">EndCreateDirectory</a></td><td><div class="summary">
            Ends a call to BeginCreateDirectory
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9239c4e0-62d7-f5e4-ca42-8ceb254aa41b.htm">EndDeleteDirectory</a></td><td><div class="summary">
            Ends a call to BeginDeleteDirectory()
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f475c707-cb38-6a5c-192a-9302d8105d0a.htm">EndDeleteFile</a></td><td><div class="summary">
            Ends a call to BeginDeleteFile
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3078ed76-c7a1-fe56-937e-19c8dbebb78f.htm">EndDereferenceLink</a></td><td><div class="summary">
            Ends a call to BeginDereferenceLink
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="eabd6b1c-0e9e-2d7d-1e3f-23e09f394184.htm">EndDirectoryExists</a></td><td><div class="summary">
            Ends a call to BeginDirectoryExists
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4ecbf454-a6f6-6ab3-d2df-5c04da51da0d.htm">EndDisconnect</a></td><td><div class="summary">
            Ends a call to BeginDisconnect
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9ea4b48a-41f1-29ce-fa51-13890ef76fcf.htm">EndExecute</a></td><td><div class="summary">
            Ends an asynchronous command
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="453df42c-880a-46a3-bcb4-5c49995d45bb.htm">EndFileExists</a></td><td><div class="summary">
            Ends a call to BeginFileExists
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fa2f7453-5440-d5b3-3011-184fac0fbeb3.htm">EndGetFileSize</a></td><td><div class="summary">
            Ends a call to BeginGetFileSize()
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8263204c-6941-a31a-e4cd-6d4efd04d834.htm">EndGetHash</a></td><td><div class="summary">
            Ends an asynchronous call to BeginGetHash
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="96f187b5-9a65-ea6e-2c96-f6d7f1796fda.htm">EndGetHashAlgorithm</a></td><td><div class="summary">
            Ends a call to BeginGetHashAlgorithm
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7f8b28db-53dd-65c3-2905-37a12a2ec288.htm">EndGetListing</a></td><td><div class="summary">
            Ends an asynchronous file listing
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="25cb63a3-c44a-5f1b-2436-0c6f1c23d852.htm">EndGetModifiedTime</a></td><td><div class="summary">
            Ends a call to BeginGetModifiedTime()
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e550c171-511f-3f55-74a1-216f0922e766.htm">EndGetNameListing</a></td><td><div class="summary">
            Ends a call to BeginGetNameListing()
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="190430b8-1443-2488-65ee-3bf45137d20b.htm">EndGetObjectInfo</a></td><td><div class="summary">
            Ends a call to BeginGetObjectInfo
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2f3c9975-10d7-f8f9-cfa3-bc63c1b4c250.htm">EndGetWorkingDirectory</a></td><td><div class="summary">
            Ends an asynchronous call to retrieve the working directory
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f0659dd6-2755-9604-b0e8-9aadb92a99e3.htm">EndOpenAppend</a></td><td><div class="summary">
            Ends a call to BeginOpenAppend()
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="764a6179-d99e-9f17-0144-01ed74f50d1a.htm">EndOpenRead</a></td><td><div class="summary">
            Ends a call to BeginOpenRead()
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="eeeeca88-3529-7cca-27e6-85ed069537b2.htm">EndOpenWrite</a></td><td><div class="summary">
            Ends a call to BeginOpenWrite()
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="dc481ab4-015c-3a40-45a6-cd57271a84a5.htm">EndRename</a></td><td><div class="summary">
            Ends a call to BeginRename
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="60ca75bd-dfe6-1236-d378-3a37d399e9dd.htm">EndSetHashAlgorithm</a></td><td><div class="summary">
            Ends an asynchronous call to BeginSetHashAlgorithm
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3ec08924-e118-6d76-2c29-f43d5898e52a.htm">EndSetWorkingDirectory</a></td><td><div class="summary">
            Ends asynchronous directory change
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="259cd53c-438f-1f4d-e593-5a2f5eef91dd.htm">Execute(String)</a></td><td><div class="summary">
            Executes a command
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c2e7afbb-da4c-27e8-2955-c4dd47f2e392.htm">Execute(String, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Object<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a></td><td><div class="summary">
            Executes a command
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="84dd76f4-0cf5-a6e1-58d0-bfd9cc9c4584.htm">FileExists(String)</a></td><td><div class="summary">
            Checks if a file exsts on the server by taking a 
            file listing of the parent directory in the path
            and comparing the results the path supplied.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="13d5c080-4ed7-c90d-d31b-1ba5a5ac8356.htm">FileExists(String, FtpListOption)</a></td><td><div class="summary">
            Checks if a file exsts on the server by taking a 
            file listing of the parent directory in the path
            and comparing the results the path supplied.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ddea4654-501a-a4d1-16b2-f64d47c5cfed.htm">GetFileSize</a></td><td><div class="summary">
            Gets the size of the file
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b9a0b8b3-d354-057d-17e6-657eabb6d3f2.htm">GetHash</a></td><td><div class="summary">
            Gets the hash of an object on the server using the
            currently selected hash algorithm. Supported
            algorithms, if any, are available in the HashAlgorithms
            property. You should confirm that it's not equal
            to FtpHashAlgorithm.NONE before calling this method
            otherwise the server trigger a FtpCommandException()
            due to a lack of support for the HASH command. You can
            set the algorithm using the SetHashAlgorithm() method and
            you can query the server for the current hash algorithm
            using the GetHashAlgorithm() method.
            
            This feature is experimental and based on the following draft:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8f24e3a0-7072-9c59-e96f-10b5356aaf7a.htm">GetHashAlgorithm</a></td><td><div class="summary">
            Gets the currently selected hash algorith for the HASH
            command. This feature is experimental. See this link
            for details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ea01ba9e-066a-e70a-a4b2-557d2b8633bd.htm">GetListing<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Gets a file listing from the server. Each FtpListItem object returned
            contains information about the file that was able to be retrieved. If
            a DateTime property is equal to DateTime.MinValue then it means the 
            date in question was not able to be retrieved. If the Size property
            is equal to 0 then it means the size of the object could also not
            be retrieved.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="816d8165-e310-322d-e4ea-dbad3669d621.htm">GetListing(String)</a></td><td><div class="summary">
            Gets a file listing from the server. Each FtpListItem object returned
            contains information about the file that was able to be retrieved. If
            a DateTime property is equal to DateTime.MinValue then it means the 
            date in question was not able to be retrieved. If the Size property
            is equal to 0 then it means the size of the object could also not
            be retrieved.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fbf7adee-c944-99b8-ca77-a7f837b7baa2.htm">GetListing(String, FtpListOption)</a></td><td><div class="summary">
            Gets a file listing from the server. Each FtpListItem object returned
            contains information about the file that was able to be retrieved. If
            a DateTime property is equal to DateTime.MinValue then it means the 
            date in question was not able to be retrieved. If the Size property
            is equal to 0 then it means the size of the object could also not
            be retrieved.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ea443193-8fb1-76d2-3d4f-352a039ee574.htm">GetModifiedTime</a></td><td><div class="summary">
            Gets the modified time of the file
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3e175a06-0495-c0e5-4b31-41f3b82bf6cc.htm">GetNameListing<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Returns a file/directory listing using the NLST command.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4d36f8c5-7a5e-a181-16c1-4295579bffeb.htm">GetNameListing(String)</a></td><td><div class="summary">
            Returns a file/directory listing using the NLST command.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="bc39fb74-fad4-be49-56fc-7fe24c9c1d55.htm">GetObjectInfo</a></td><td><div class="summary">
            Returns information about a file system object. You should check the Capabilities
            flags for the FtpCapability.MLSD flag before calling this method. Failing to do
            so will result in an InvalidOperationException being thrown when the server
            does not support machine listings. Returns null if the server response can't
            be parsed or the server returns a failure completion code. The error for a failure
            is logged with FtpTrace. No exception is thrown on error because that would negate
            the usefullness of this method for checking for the existence of an object.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7ca91665-719d-8703-9338-345342dec6a2.htm">GetWorkingDirectory</a></td><td><div class="summary">
            Gets the current working directory
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="65aabfb5-49fc-cb1a-5f9a-11c44e09c52d.htm">HasFeature</a></td><td><div class="summary">
            Performs a bitwise and to check if the specified
            flag is set on the Capabilities enum property.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3b6a8934-6b58-4fc5-c9d8-a145a8885182.htm">OpenAppend(String)</a></td><td><div class="summary">
            Opens the specified file to be appended to
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="842f5fb9-b8c3-3dd1-49b3-ac897ad45e28.htm">OpenAppend(String, FtpDataType)</a></td><td><div class="summary">
            Opens the specified file to be appended to
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="624e224b-696b-38fa-8e22-c2b17cc972b6.htm">OpenRead(String)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9ce7d81b-e38c-4750-c78d-e9e7a16ff86d.htm">OpenRead(String, Int64)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="82f7e673-8691-8ae0-b9f5-deb49c9070f9.htm">OpenRead(String, FtpDataType)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fa22c5b2-853f-2280-2bd1-e8174bd0d566.htm">OpenRead(String, FtpDataType, Int64)</a></td><td><div class="summary">
            Opens the specified file for reading
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="121efcdb-ae12-015b-c87b-3046062b0c7d.htm">OpenWrite(String)</a></td><td><div class="summary">
            Opens the specified file for writing
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="60dc02d1-a033-2dea-c50b-cfda218f4b21.htm">OpenWrite(String, FtpDataType)</a></td><td><div class="summary">
            Opens the specified file for writing
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7f659b41-4a5a-a725-064b-2440c55ace92.htm">Rename</a></td><td><div class="summary">
            Renames an object on the remote file system.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="11a6c497-16e3-0253-73bf-b9f164f36d0d.htm">SetHashAlgorithm</a></td><td><div class="summary">
            Tells the server which hash algorith to use
            for the HASH command. If you specifiy an 
            algorithm not listed in FtpClient.HashTypes
            a NotImplemented() exectpion will be thrown
            so be sure to query that list of Flags before
            selecting a hash algorithm. Support for the
            HASH command is experimental. Please see
            the following link for more details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7414b9da-76f2-5cd8-12f5-e6dd7a8b9b92.htm">SetWorkingDirectory</a></td><td><div class="summary">
            Sets the work directory on the server
            </div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(propertyTableToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(propertyTableToggle, event)" tabindex="0"><img id="propertyTableToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Properties</span></h1><div id="propertyTableSection" class="section" name="collapseableSection" style=""><table id="memberList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
							 
						</th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7c3d3b59-96b7-59d8-8503-8e692ab870ae.htm">Capabilities</a></td><td><div class="summary">
            Gets the server capabilties represented by flags
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2cf408dc-36e4-2390-5335-82182b1b5cf2.htm">ClientCertificates</a></td><td><div class="summary">
            Client certificates to be used in SSL authentication process
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="59059e0c-aed4-3c88-4aaf-dfdb4b41b994.htm">ConnectTimeout</a></td><td><div class="summary">
            Gets or sets the length of time in miliseconds to wait for a connection 
            attempt to succeed before giving up. Default is 15000 (15 seconds).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="44445e00-abce-c02a-7343-7b47e1287fe5.htm">Credentials</a></td><td><div class="summary">
            Credentials used for authentication
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="86f4b7c9-611e-42fd-ddfc-7a62156d64fc.htm">DataConnectionConnectTimeout</a></td><td><div class="summary">
            Gets or sets the length of time in miliseconds for a data connection
            to be established before giving up. Default is 15000 (15 seconds).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fae5f7ae-1cf3-e168-cc36-a35c6440e214.htm">DataConnectionEncryption</a></td><td><div class="summary">
            Indicates if data channel transfers should be encrypted. Only valid if EncryptionMode
            property is not equal to FtpSslMode.None.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ed83cc19-e9c3-8ee2-9cd9-4dc34aa0b9da.htm">DataConnectionReadTimeout</a></td><td><div class="summary">
            Gets or sets the length of time in miliseconds the data channel
            should wait for the server to send data. Default value is 
            15000 (15 seconds).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="911a5d66-8435-5aa9-a7e4-f43b4d23ed64.htm">DataConnectionType</a></td><td><div class="summary">
            Data connection type, default is AutoPassive which tries
            a connection with EPSV first and if it fails then tries
            PASV before giving up. If you know exactly which kind of
            connection you need you can slightly increase performance
            by defining a speicific type of passive or active data
            connection here.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0a6cbc96-d891-7c3a-813e-7c2aa0885520.htm">EnableThreadSafeDataConnections</a></td><td><div class="summary">
            When this value is set to true (default) the control connection
            is cloned and a new connection the server is established for the
            data channel operation. This is a thread safe approach to make
            asynchronous operations on a single control connection transparent
            to the developer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3675061e-d8ee-b31d-07d9-9933a3221252.htm">Encoding</a></td><td><div class="summary">
            Gets or sets the text encoding being used when talking with the server. The default
            value is Encoding.ASCII however upon connection, the client checks
            for UTF8 support and if it's there this property is switched over to
            Encoding.UTF8. Manually setting this value overrides automatic detection
            based on the FEAT list; if you change this value it's always used
            regardless of what the server advertises, if anything.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ad058fba-3ecf-3834-017f-926e09ed1e4b.htm">EncryptionMode</a></td><td><div class="summary">
            Type of SSL to use, or none. Default is none. Explicit is TLS, Implicit is SSL.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3bd2a0bf-c4f0-c602-e467-8ec13d24dce0.htm">HashAlgorithms</a></td><td><div class="summary">
            Get the hash types supported by the server, if any. This
            is a recent extension to the protocol that is not fully
            standardized and is not guarateed to work. See here for
            more details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="1dedc373-0da2-ceb6-bd56-fc5ac43b3af5.htm">Host</a></td><td><div class="summary">
            The server to connect to
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="c98cb9b8-663a-114c-917f-493d39dfa293.htm">InternetProtocolVersions</a></td><td><div class="summary">
            Flags specifying which versions of the internet protocol to
            support when making a connection. All addresses returned during
            name resolution are tried until a successful connection is made.
            You can fine tune which versions of the internet protocol to use
            by adding or removing flags here. I.e., setting this property
            to FtpIpVersion.IPv4 will cause the connection process to
            ignore IPv6 addresses. The default value is ANY version.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="948e2c23-0d8e-4cf9-1574-7a7ab4a87ff6.htm">IsConnected</a></td><td><div class="summary">
            Gets a value indicating if the connection is alive
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="13a7a2e2-35a1-df20-1870-c07e9c7c063f.htm">IsDisposed</a></td><td><div class="summary">
            Gets a value indicating if this object has already been disposed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="c25b371e-e9d4-c231-a10c-436623facc20.htm">MaximumDereferenceCount</a></td><td><div class="summary">
            Gets or sets a value that controls the maximum depth
            of recursion that DereferenceLink() will follow symbolic
            links before giving up. You can also specify the value
            to be used as one of the overloaded parameters to the
            DereferenceLink() method. The default value is 20. Specifying
            -1 here means inifinitly try to resolve a link. This is
            not recommended for obvious reasons (stack overflow).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f364d42d-e58f-82b8-55e5-a11656ef36c7.htm">Port</a></td><td><div class="summary">
            The port to connect to. If this value is set to 0 (Default) the port used
            will be determined by the type of SSL used or if no SSL is to be used it 
            will automatically connect to port 21.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fd2f890c-096c-bc18-fd5c-e8ee8d630329.htm">ReadTimeout</a></td><td><div class="summary">
            Gets or sets the length of time wait in miliseconds for data to be
            read from the underlying stream. The default value is 15000 (15 seconds).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b1ce28de-e5ff-95d4-7eaa-7685af9bd40e.htm">SocketKeepAlive</a></td><td><div class="summary">
            Gets or sets a value indicating if SocketOption.KeepAlive should be set on 
            the underlying stream's socket. If the connection is alive, the option is
            adjusted in real-time. The value is stored and the KeepAlive option is set
            accordingly upon any new connections. The value set here is also applied to
            all future data streams. It has no affect on cloned control connections or
            data connections already in progress. The default value is false.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="4aa78b82-9920-0658-f3b6-f15f3d666a05.htm">SocketPollInterval</a></td><td><div class="summary">
            Gets or sets the length of time in miliseconds
            that must pass since the last socket activity
            before calling Poll() on the socket to test for
            connectivity. Setting this interval too low will
            have a negative impact on perfomance. Setting this
            interval to 0 disables Poll()'ing all together.
            The default value is 15 seconds.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0f08b1b1-8871-3ce2-b965-04112a0ce165.htm">StaleDataCheck</a></td><td><div class="summary">
            Gets or sets a value indicating whether a test should be performed to
            see if there is stale (unrequested data) sitting on the socket. In some
            cases the control connection may time out but before the server closes
            the connection it might send a 4xx response that was unexpected and
            can cause synchronization errors with transactions. To avoid this
            problem the Execute() method checks to see if there is any data
            available on the socket before executing a command. On Azure hosting
            platforms this check can cause an exception to be thrown. In order
            to work around the exception you can set this property to false
            which will skip the test entirely however doing so eliminates the
            best effort attempt of detecting such scenarios. See this thread
            for more details about the Azure problem:
            https://netftp.codeplex.com/discussions/535879
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a943b7be-4427-4b00-40d2-4ed637819fab.htm">SystemType</a></td><td><div class="summary">
            Gets the type of system/server that we're
            connected to.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="91a2bde5-0946-643f-0196-fe9630cf57d8.htm">UngracefullDisconnection</a></td><td><div class="summary">
            Disconnect from the server without sending QUIT. This helps
            work around IOExceptions caused by buggy connection resets
            when closing the control connection.
            </div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(eventTableToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(eventTableToggle, event)" tabindex="0"><img id="eventTableToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Events</span></h1><div id="eventTableSection" class="section" name="collapseableSection" style=""><table id="memberList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
							 
						</th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="dd0c0d5d-006d-169c-b619-0b216093bb26.htm">ValidateCertificate</a></td><td><div class="summary">
            Event is fired to validate SSL certificates. If this event is
            not handled and there are errors validating the certificate
            the connection will be aborted.
            </div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="e8f97041-926d-bea6-3d54-e53c327bdd06.htm">IFtpClient Interface</a></div><div class="seeAlsoStyle"><a href="906f6efd-bcfa-d32c-3d73-4b092905ef85.htm">System.Net.FtpClient Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jptrosclair%40gmail.com?Subject=System.Net.FtpClient">J.P. Trosclair</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p />Copyright J.P. Trosclair (c) 2013</div></div></body></html>