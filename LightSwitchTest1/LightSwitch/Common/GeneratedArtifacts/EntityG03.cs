

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class ServicePlan : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ServicePlan entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServicePlan()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServicePlan(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ServicePlan> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ServicePlan.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServicePlan_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServicePlan_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ServicePlan.DetailsClass.GetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ServicePlan.DetailsClass.SetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ServicePlan.DetailsClass.GetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ServicePlan.DetailsClass.SetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool InternationalDialing
        {
            get
            {
                return global::LightSwitchApplication.ServicePlan.DetailsClass.GetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.InternationalDialing);
            }
            set
            {
                global::LightSwitchApplication.ServicePlan.DetailsClass.SetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.InternationalDialing, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InternationalDialing_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InternationalDialing_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InternationalDialing_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VoicePlan
        {
            get
            {
                return global::LightSwitchApplication.ServicePlan.DetailsClass.GetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.VoicePlan);
            }
            set
            {
                global::LightSwitchApplication.ServicePlan.DetailsClass.SetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.VoicePlan, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VoicePlan_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VoicePlan_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VoicePlan_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DataPlan
        {
            get
            {
                return global::LightSwitchApplication.ServicePlan.DetailsClass.GetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.DataPlan);
            }
            set
            {
                global::LightSwitchApplication.ServicePlan.DetailsClass.SetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.DataPlan, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataPlan_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataPlan_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataPlan_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool HotSpot
        {
            get
            {
                return global::LightSwitchApplication.ServicePlan.DetailsClass.GetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.HotSpot);
            }
            set
            {
                global::LightSwitchApplication.ServicePlan.DetailsClass.SetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.HotSpot, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HotSpot_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HotSpot_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HotSpot_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.PhoneItem PhoneItem
        {
            get
            {
                return global::LightSwitchApplication.ServicePlan.DetailsClass.GetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.PhoneItem);
            }
            set
            {
                global::LightSwitchApplication.ServicePlan.DetailsClass.SetValue(this, global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.PhoneItem, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneItem_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneItem_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneItem_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ServicePlan,
                global::LightSwitchApplication.ServicePlan.DetailsClass,
                global::LightSwitchApplication.ServicePlan.DetailsClass.IImplementation,
                global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass>.Entry
                __ServicePlanEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass>.Entry(
                    global::LightSwitchApplication.ServicePlan.DetailsClass.__ServicePlan_CreateNew,
                    global::LightSwitchApplication.ServicePlan.DetailsClass.__ServicePlan_Created,
                    global::LightSwitchApplication.ServicePlan.DetailsClass.__ServicePlan_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ServicePlan __ServicePlan_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ServicePlan> es)
            {
                return new global::LightSwitchApplication.ServicePlan(es);
            }
            private static void __ServicePlan_Created(global::LightSwitchApplication.ServicePlan e)
            {
                e.ServicePlan_Created();
            }
            private static bool __ServicePlan_AllowSaveWithErrors(global::LightSwitchApplication.ServicePlan e)
            {
                bool result = false;
                e.ServicePlan_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool> InternationalDialing
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.InternationalDialing) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string> VoicePlan
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.VoicePlan) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string> DataPlan
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.DataPlan) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool> HotSpot
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.HotSpot) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, global::LightSwitchApplication.PhoneItem> PhoneItem
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.PhoneItem) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, global::LightSwitchApplication.PhoneItem>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new bool InternationalDialing { get; set; }
                new string VoicePlan { get; set; }
                new string DataPlan { get; set; }
                new bool HotSpot { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation PhoneItem { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServicePlan.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, int>.Data> c, global::LightSwitchApplication.ServicePlan.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ServicePlan e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ServicePlan e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ServicePlan e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServicePlan.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ServicePlan.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ServicePlan e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ServicePlan e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ServicePlan e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Entry
                    InternationalDialing = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Entry(
                        "InternationalDialing",
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._InternationalDialing_Stub,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._InternationalDialing_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._InternationalDialing_Validate,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._InternationalDialing_GetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._InternationalDialing_SetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._InternationalDialing_OnValueChanged);
                private static void _InternationalDialing_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServicePlan.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ServicePlan.DetailsClass d, object sf)
                {
                    c(d, ref d._InternationalDialing, sf);
                }
                private static bool _InternationalDialing_ComputeIsReadOnly(global::LightSwitchApplication.ServicePlan e)
                {
                    bool result = false;
                    e.InternationalDialing_IsReadOnly(ref result);
                    return result;
                }
                private static void _InternationalDialing_Validate(global::LightSwitchApplication.ServicePlan e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InternationalDialing_Validate(r);
                }
                private static bool _InternationalDialing_GetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.ImplementationEntity.InternationalDialing;
                }
                private static void _InternationalDialing_SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.InternationalDialing = v;
                }
                private static void _InternationalDialing_OnValueChanged(global::LightSwitchApplication.ServicePlan e)
                {
                    e.InternationalDialing_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Entry
                    VoicePlan = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Entry(
                        "VoicePlan",
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._VoicePlan_Stub,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._VoicePlan_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._VoicePlan_Validate,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._VoicePlan_GetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._VoicePlan_SetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._VoicePlan_OnValueChanged);
                private static void _VoicePlan_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServicePlan.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Data> c, global::LightSwitchApplication.ServicePlan.DetailsClass d, object sf)
                {
                    c(d, ref d._VoicePlan, sf);
                }
                private static bool _VoicePlan_ComputeIsReadOnly(global::LightSwitchApplication.ServicePlan e)
                {
                    bool result = false;
                    e.VoicePlan_IsReadOnly(ref result);
                    return result;
                }
                private static void _VoicePlan_Validate(global::LightSwitchApplication.ServicePlan e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VoicePlan_Validate(r);
                }
                private static string _VoicePlan_GetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.ImplementationEntity.VoicePlan;
                }
                private static void _VoicePlan_SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VoicePlan = v;
                }
                private static void _VoicePlan_OnValueChanged(global::LightSwitchApplication.ServicePlan e)
                {
                    e.VoicePlan_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Entry
                    DataPlan = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Entry(
                        "DataPlan",
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._DataPlan_Stub,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._DataPlan_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._DataPlan_Validate,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._DataPlan_GetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._DataPlan_SetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._DataPlan_OnValueChanged);
                private static void _DataPlan_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServicePlan.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Data> c, global::LightSwitchApplication.ServicePlan.DetailsClass d, object sf)
                {
                    c(d, ref d._DataPlan, sf);
                }
                private static bool _DataPlan_ComputeIsReadOnly(global::LightSwitchApplication.ServicePlan e)
                {
                    bool result = false;
                    e.DataPlan_IsReadOnly(ref result);
                    return result;
                }
                private static void _DataPlan_Validate(global::LightSwitchApplication.ServicePlan e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DataPlan_Validate(r);
                }
                private static string _DataPlan_GetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.ImplementationEntity.DataPlan;
                }
                private static void _DataPlan_SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DataPlan = v;
                }
                private static void _DataPlan_OnValueChanged(global::LightSwitchApplication.ServicePlan e)
                {
                    e.DataPlan_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Entry
                    HotSpot = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Entry(
                        "HotSpot",
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._HotSpot_Stub,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._HotSpot_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._HotSpot_Validate,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._HotSpot_GetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._HotSpot_SetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._HotSpot_OnValueChanged);
                private static void _HotSpot_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServicePlan.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ServicePlan.DetailsClass d, object sf)
                {
                    c(d, ref d._HotSpot, sf);
                }
                private static bool _HotSpot_ComputeIsReadOnly(global::LightSwitchApplication.ServicePlan e)
                {
                    bool result = false;
                    e.HotSpot_IsReadOnly(ref result);
                    return result;
                }
                private static void _HotSpot_Validate(global::LightSwitchApplication.ServicePlan e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HotSpot_Validate(r);
                }
                private static bool _HotSpot_GetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.ImplementationEntity.HotSpot;
                }
                private static void _HotSpot_SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.HotSpot = v;
                }
                private static void _HotSpot_OnValueChanged(global::LightSwitchApplication.ServicePlan e)
                {
                    e.HotSpot_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, global::LightSwitchApplication.PhoneItem>.Entry
                    PhoneItem = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, global::LightSwitchApplication.PhoneItem>.Entry(
                        "PhoneItem",
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_Stub,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_Validate,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_GetCoreImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_GetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_SetImplementationValue,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_Refresh,
                        global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties._PhoneItem_OnValueChanged);
                private static void _PhoneItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServicePlan.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, global::LightSwitchApplication.PhoneItem>.Data> c, global::LightSwitchApplication.ServicePlan.DetailsClass d, object sf)
                {
                    c(d, ref d._PhoneItem, sf);
                }
                private static bool _PhoneItem_ComputeIsReadOnly(global::LightSwitchApplication.ServicePlan e)
                {
                    bool result = false;
                    e.PhoneItem_IsReadOnly(ref result);
                    return result;
                }
                private static void _PhoneItem_Validate(global::LightSwitchApplication.ServicePlan e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PhoneItem_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _PhoneItem_GetCoreImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.ImplementationEntity.PhoneItem;
                }
                private static global::LightSwitchApplication.PhoneItem _PhoneItem_GetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.PhoneItem, global::LightSwitchApplication.PhoneItem.DetailsClass>(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.PhoneItem, ref d._PhoneItem);
                }
                private static void _PhoneItem_SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass d, global::LightSwitchApplication.PhoneItem v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.PhoneItem, ref d._PhoneItem, (i, ev) => i.PhoneItem = ev, v);
                }
                private static void _PhoneItem_Refresh(global::LightSwitchApplication.ServicePlan.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ServicePlan.DetailsClass.PropertySetProperties.PhoneItem, ref d._PhoneItem);
                }
                private static void _PhoneItem_OnValueChanged(global::LightSwitchApplication.ServicePlan e)
                {
                    e.PhoneItem_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Data _InternationalDialing;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Data _VoicePlan;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, string>.Data _DataPlan;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, bool>.Data _HotSpot;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServicePlan, global::LightSwitchApplication.ServicePlan.DetailsClass, global::LightSwitchApplication.PhoneItem>.Data _PhoneItem;
            
        }
    
        #endregion
    }
    
    #endregion
}
